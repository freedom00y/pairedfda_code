
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #template
> ###############################################################################
> ###############################################################################
> 
> ## If generate from normal distribution, onlyset one element in freedom range
> varres=0.04
> simu_times=550
> type='n'
> freedom_range=c(1)
> filename=paste('simu_output/',type,'_',varres,'_',simu_times,'.txt', sep = "")
> title=paste('Generate from',type, 'distribution.','Repeat',simu_times,'times.',
+             'The variance of residual is',varres)
> write.table(title,filename)
> for(free in freedom_range)
+ {
+   write.table(paste("== degree of freedom: ",free,"=="),filename,append=TRUE)
+   library(parallel)
+   no_cores <-detectCores()-1
+   cl <- makeCluster(no_cores)
+   clusterExport(cl,c("free","filename","varres","type"))
+   res1=parSapply(cl, 
+                 1:simu_times+7, 
+                 function(i){
+                   source('onesimu.R')
+                   temp=try(simu(seed = i,type,free,varres))
+                   if(class(temp)=='try-error')
+                     a=rep(NA,24)
+                   else
+                     a=temp
+                   
+                   write.table( t( c(i,round(a,4)) ), filename,append = TRUE,row.names = F,col.names = F)
+                   a
+                 })
+   stopCluster(cl)
+   res = res1[,!is.na(res1[2,])]
+   res=apply(res[,1:500],1,mean)
+   res=matrix(res,nrow = 3,byrow = TRUE)
+   colnames(res)=c("Mean1","Mean2","YPC1","YPC2","ZPC1","ZPC2","IND1","IND2")
+   rownames(res)=c('t',"slash","norm")
+   write.table(round(1000*res,2),filename,append=TRUE)
+ }
value0=4372.15
value1=4598.87
differ=-0.0518544
Increase more than 5%. Force to break!
value0=4529.28
value1=4757.51
differ=-0.0503892
Increase more than 5%. Force to break!
