% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{minEM}
\alias{minEM}
\title{Estimations}
\usage{
minEM(data, lambda, type, ka, kb, tol, maxiter = 100L)
}
\arguments{
\item{data}{Processed data. Use predata to preprocess first.}

\item{lambda}{The penalty patameters, a vector with 4 components showing in the following order, the first mean curve \eqn{(\lambda_\mu)}, the second mean curve \eqn{(\lambda_\nu)}, the first pcs \eqn{(\lambda_f)}, the second pcs \eqn{(\lambda_g)}.}

\item{type}{Model type. 'n' means normal distribution, 't' means student-t distribution, 's' means slash distribution}

\item{ka}{Number of pcs for the first reponse variable (Y)}

\item{kb}{Number of pcs for the second reponse variable (Z)}

\item{tol}{Tolerance of the EM algorithm. The default one is 1e-4.}

\item{maxiter}{Maximum iteration time. The default is 100 times.}
}
\value{
The estimated parameters
}
\description{
Use this function to estimate parameters
}
\details{
We suppose the model is 
\deqn{Y_i = B_i \theta_\mu + B_i f \alpha_i + \epsilon_i, Z_i = B_i \theta_\nu + B_i g \beta_i + \xi_i,}
where \eqn{(\alpha_i, \beta_i)} and residuals follow normal, t or slash distribution. We denote that 
\deqn{(\alpha_i, \beta_i)|u_i \sim N(0,\Sigma_{\alpha\beta}/u_i), \epsilon_i|u_i\sim N(0,\sigma_\epsilon^2/u_i), \xi_i|u_i\sim N(0,\sigma_\xi^2/u_i), u_i\sim H(\gamma).}
If \eqn{(\alpha_i, \beta_i)} and residuals follow normal, it means \eqn{H(\gamma)=1} all the time; 
if \eqn{(\alpha_i, \beta_i)} and residuals follow t distribution, it means \eqn{H(\gamma)} is the distribution \eqn{\Gamma(\gamma/2,\gamma/2)};
if \eqn{(\alpha_i, \beta_i)} and residuals follow slash distribution, it means \eqn{H(\gamma)} is the distribution \eqn{\beta(\gamma,1)},
where \eqn{\Sigma_{\alpha\beta} = (D_a & C\\C^T & Db)}.
This function returns the estimation of \eqn{\sigma^2_\epsilon,\sigma^2_\xi,\theta_\mu,\theta_\nu,\theta_f,\theta_g,Da,Db,C}, the degree of freedom \eqn{\gamma}.
}
\examples{
rawdata = gen_data(n=100,
                   varres=0.01, 
                   gama=2, 
                   type='t',
                   ka=2,
                   kb=2)
data = predata(nobs_y = rawdata$obs_times,
               nobs_z = rawdata$obs_times,
               time_y = rawdata$dataset[,2],
               time_z = rawdata$dataset[,2],
               y = rawdata$dataset[,3],
               z = rawdata$dataset[,4],
               knots = 10,
               order=3)
## without penalty
lambda = c(0,0,0,0)
pt_nopen = minEM(data, 
                 lambda, 
                 type='t', 
                 ka=2, 
                 kb=2, 
                 tol = 1e-4, 
                 maxiter = 100)
## with penalty
lambda_t = simplex(data,Kfold=5,ka=2,kb=2,type='t')
pt_pen = minEM(data, 
               lambda_t, 
               type='t', 
               ka=2, 
               kb=2, 
               tol = 1e-4, 
               maxiter = 100)
}
