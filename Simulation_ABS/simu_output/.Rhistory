geom_density()
}
n_list2 <- c(10,20,50,100)
size_list2 <- c(100,200,500)
Sample_mean <- list(NA,length(n_list2))
for(size in size_list2)
{
for(i in 1:length(n_list2)){
n <- n_list2[i]
Sample_mean[[i]] <- rbinom(n,size,prob =0.5)/size
}
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
ggplot(df, aes(x=value, color=as.factor(category))) +
geom_density()
}
#2
n_list2 <- c(10,20,50,100)
size_list2 <- c(100,200,500)
Sample_mean <- list(NA,length(n_list2))
size = size_list[1]
size = size_list2[1]
size
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
mean_vec = c()
for(j in 1:n_list2[i])
{
mean_vec = c(mean_vec,mean(rbinom(n=100,size=1,prob =0.5)))
}
Sample_mean[[i]] = mean_vec
}
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
ggplot(df, aes(x=value, color=as.factor(category))) +
geom_density()
Sample_mean
Sample_mean[1]
Sample_mean[2]
Sample_mean[3]
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,n)
for(j in 1:n)
{
mean_vec[j] = mean(rbinom(n = 100,size = 1,prob = 0.5))
}
Sample_mean[i] = mean_vec
}
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,n)
for(j in 1:n)
{
mean_vec[j] = mean(rbinom(n = 100,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
Sample_mean[[1]]
Sample_mean[1]
class(Sample_mean[[1]])
class(Sample_mean[1])
library(ggplot2)
df <- data.frame(category = c(rep("Exp1",10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
df <- data.frame(category = c(rep(5,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
library(ggplot2)
df <- data.frame(category = c(rep(5,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
#2
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,n)
for(j in 1:n)
{
mean_vec[j] = mean(rbinom(n = 100,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
Sample_mean
# refine Question2
,
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,100)
for(j in 1:100)
{
mean_vec[j] = mean(rbinom(n = n,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
Sample_mean
library(ggplot2)
df <- data.frame(category = c(rep(1,100),rep(2,100),rep(3,100),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
ggplot(df, aes(x=value, color=as.factor(category))) +
geom_density()
#1
n_list <- seq(10,1000,10)
Sample_mean <- rep(NA,length(n_list))
for(i in 1:length(n_list)){
n <- n_list[i]
Sample_mean[i] <- mean(rbinom(n = n, size = 1, prob =0.5)
}
#1
n_list <- seq(10,1000,10)
Sample_mean <- rep(NA,length(n_list))
for(i in 1:length(n_list)){
n <- n_list[i]
Sample_mean[i] <- mean(rbinom(n = n, size = 1, prob =0.5)
}
#1
n_list <- seq(10,1000,10)
Sample_mean <- rep(NA,length(n_list))
for(i in 1:length(n_list)){
n <- n_list[i]
Sample_mean[i] <- mean(rbinom(n = n, size = 1, prob =0.5))
}
plot(n_list,Sample_mean)
abline(h= 0.5)
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,n)
for(j in 1:n)
{
mean_vec[j] = mean(rbinom(n = 100,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,n)
for(j in 1:n)
{
mean_vec[j] = mean(rbinom(n = 100,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100))
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]])
Sample_mean
#2
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list2[i]
mean_vec = rep(NA,n)
for(j in 1:n)
{
mean_vec[j] = mean(rbinom(n = 100,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
library(ggplot2)
df <- data.frame(category = c(rep(1,10),rep(2,20),rep(3,50),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
ggplot(df, aes(x=value, color=as.factor(category))) +
geom_density()
n_list2 <- c(10,20,50,100)
Sample_mean <- list(NA,length(n_list2))
for(i in 1:length(n_list2))
{
n <- n_list[i]
mean_vec = rep(NA,100)
for(j in 1:100)
{
mean_vec[j] = mean(rbinom(n = n,size = 1,prob = 0.5))
}
Sample_mean[[i]] = mean_vec
}
library(ggplot2)
df <- data.frame(category = c(rep(1,100),rep(2,100),rep(3,100),rep(4,100)),
value= c(Sample_mean[[1]],Sample_mean[[2]],Sample_mean[[3]],Sample_mean[[4]]))
ggplot(df, aes(x=value, color=as.factor(category))) +
geom_density()
library(readxl)
Frequency_Data <- read_excel("Desktop/tutor/Frequency Data.xlsx")
View(Frequency_Data)
plot(Frequency_Data$Year,Frequency_Data$Google_all)
plot(Frequency_Data$Year,Frequency_Data$Google_all,"l")
lines(Frequency_Data$Year,Frequency_Data$Google_news,col="red")
lines(Frequency_Data$Year,Frequency_Data$Google_Scholar,col="yellow")
plot(Frequency_Data$Year,Frequency_Data$Google_all)
plot(Frequency_Data$Year,Frequency_Data$Google_all,"l")
lines(Frequency_Data$Year,Frequency_Data$Google_news,col="red")
lines(Frequency_Data$Year,Frequency_Data$Google_Scholar,col="yellow")
plot(Frequency_Data$Year,Frequency_Data$Google_all)
plot(Frequency_Data$Year,Frequency_Data$Google_all)
points(Frequency_Data$Year,Frequency_Data$Google_news,col="red")
points(Frequency_Data$Year,Frequency_Data$Google_Scholar,col="yellow")
plot(Frequency_Data$Year,Frequency_Data$Google_all,"l")
lines(Frequency_Data$Year,Frequency_Data$Google_news,col="red")
lines(Frequency_Data$Year,Frequency_Data$Google_Scholar,col="yellow")
Rcpp::sourceCpp("Documents/Untitled.cpp")
Rcpp::sourceCpp("Documents/Untitled.cpp")
Rcpp::sourceCpp("Documents/Untitled.cpp")
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,10,2)
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,10,2)
pgamma(1,12)
pgamma(1,12,1,1,"TRUE")
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,10,2)
Rcpp::sourceCpp("Documents/Untitled.cpp")
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,8,2)
pgamma(1,10)
pgamma(1,10,1)
pgamma(3,5)
slash_u(2,3,6)
slash_u(0,5,6)
digamma(5)-log(1)+(-0.0718088)/(0.0839179)
digamma(5)-log(3)+(-0.0718088)/(0.0839179)
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,3,6)
digamma(5)
-0.0718088/0.0839179
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,3,6)
Rcpp::sourceCpp("Documents/Untitled.cpp")
slash_u(2,3,6)
-0.133057/0.184737
digamma(5)-log(3)-0.133057/0.184737
t = seq(0,1,0.01)
t
u = 2.5*(1+t+exp(-20*(t-0.6)^2))
t = seq(0,1,0.01)
u = 2.5*(1+t+exp(-20*(t-0.6)^2))
v = 7.5-1.5*t-2.5*exp(-20*(t-0.3)^2)
t = seq(0,1,0.01)
u = 2.5*(1+t+exp(-20*(t-0.6)^2))
v = 7.5-1.5*t-2.5*exp(-20*(t-0.3)^2)
par(mfrow=c(1,2))
plot(t,u)
plot(t,v)
range(u)
diff(range(u))
diff(range(v))
ggplot(data = Data, aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
facet_wrap(vars(NoFigure)) +
theme(legend.position = "bottom") +
scale_color_discrete(na.translate=False)
#dim(seaice_list[[1]])
#length(seaice_list)
## Reshape data
library(reshape2)
Data = data.frame()
for(i in 1:6)
{
Fig = seaice_list[[i]]
Fig_melt = melt(Fig1)
Fig_melt$NoFigure = i
Data = rbind(Data,Fig_melt)
}
load("~/Downloads/Jan1VEM_MainEffects_p=2J=2.RData")
#dim(seaice_list[[1]])
#length(seaice_list)
## Reshape data
library(reshape2)
Data = data.frame()
for(i in 1:6)
{
Fig = seaice_list[[i]]
Fig_melt = melt(Fig1)
Fig_melt$NoFigure = i
Data = rbind(Data,Fig_melt)
}
#dim(seaice_list[[1]])
#length(seaice_list)
## Reshape data
library(reshape2)
Data = data.frame()
for(i in 1:6)
{
Fig = seaice_list[[i]]
Fig_melt = melt(Fig1)
Fig_melt$NoFigure = i
Data = rbind(Data,Fig_melt)
}
## Reshape data
library(reshape2)
Data = data.frame()
seaice_list
library(reshape2)
Data = data.frame()
for(i in 1:6)
{
Fig = seaice_list[[i]]
Fig_melt = melt(Fig1)
Fig_melt$NoFigure = i
Data = rbind(Data,Fig_melt)
}
## Reshape data
library(reshape2)
Data = data.frame()
for(i in 1:6)
{
Fig = seaice_list[[i]]
Fig_melt = melt(Fig)
Fig_melt$NoFigure = i
Data = rbind(Data,Fig_melt)
}
Data$value = as.factor(Data$value)
library(ggplot2)
ggplot(data = Data, aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
facet_wrap(vars(NoFigure)) +
theme(legend.position = "bottom") +
scale_color_discrete(na.translate=False)
ggplot(data = Data, aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
facet_wrap(vars(NoFigure)) +
theme(legend.position = "bottom") +
scale_color_discrete(na.translate=FALSE)
## Plot data
library(ggplot2)
ggplot(data = Data, aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
facet_wrap(vars(NoFigure)) +
scale_color_discrete(na.translate=FALSE) +
theme(legend.position = "bottom")
ggplot(data = Data, aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
scale_color_discrete(na.translate=FALSE) +
facet_wrap(vars(NoFigure)) +
theme(legend.position = "bottom")
ggplot(data = Data, aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
scale_colour_discrete(na.translate=F) +
facet_wrap(vars(NoFigure)) +
theme(legend.position = "bottom")
ggplot(data = na.omit(Data), aes(x=Var1,y=Var2,fill=value))+
geom_tile() +
scale_colour_discrete(na.translate=F) +
facet_wrap(vars(NoFigure)) +
theme(legend.position = "bottom")
(240+1+35/60)/(6*550/32)
(3*550*4+2*550)/32
360=24+21/60
360+24+21/60
384.35/240.625
time(15:57:30)
as.time(15:57:30)
as.difftime(c("18:37:52", "15:57:30"))
as.difftime(c("18:37:52", "15:57:30"),format = "%H:%M")
as.difftime(c("18:37:52", "15:57:30"),format = "%M")
as.difftime(c("18:37:52", "15:57:30"),units="mins")
1117.867-957.500
120+39+82/60
(120+39+82/60)*32/(4*550)
knitr::opts_chunk$set(echo = TRUE)
library(pairedfda)
library(parallel)
Rcpp::sourceCpp("data_gen1.cpp")
Rcpp::sourceCpp("gen_outlier1.cpp")
source("IMSE_each_abs1.R")
source("testK1.R")
Res_list1 = mclapply(10:20,
function(i){
set.seed(i)
data = gen_data1(n=100,varres=0.04,gama=2,type="n")
testK1(data)
},mc.cores=5)
Res1 = t(simplify2array(Res_list1))
matrix(apply(Res1,2,mean),nrow=3,byrow=T)
matrix(round(apply(1000*Res1,2,mean),2),nrow=3,byrow=T)
# data = gen_outlier1(n=100, varres=0.04, type="p",percent=0.05)
# testK1(data)
Res_list2 = mclapply(10:20,
function(i){
set.seed(i)
data = gen_outlier1(n=100, varres=0.04, type="p",percent=0.05)
testK1(data)
},mc.cores=5)
Res2 = t(simplify2array(Res_list2))
matrix(round(1000*apply(Res2,2,mean),2),nrow=3,byrow=T)
Res_list2 = mclapply(10:20,
function(i){
set.seed(i)
data = gen_outlier1(n=100, varres=0.25, type="p",percent=0.05)
testK1(data)
},mc.cores=5)
Res2 = t(simplify2array(Res_list2))
matrix(round(1000*apply(Res2,2,mean),2),nrow=3,byrow=T)
Res_list3 = mclapply(10:20+10,
function(i){
set.seed(i)
data = gen_outlier1(n=100, varres=0, type="c",percent=0.01)
testK1(data)
},mc.cores=5)
Res3 = t(simplify2array(Res_list3))
matrix(apply(Res3,2,mean),nrow=3,byrow=T)
matrix(round(1000*apply(Res3,2,mean),2),nrow=3,byrow=T)
setwd("~/Documents/Research/pairedfda/pairedfda_code/papercode_organized/Simulation_ABS/simu_output_outlier")
SumTable <- function(filename,n=550)
{
res = read.table(paste0(filename,".txt"),skip=n+5,nrow=3)
colnames(res) = c("Fit_Method","Mean1","Mean2",
"YPC1","YPC2","ZPC1","ZPC2","Ind1","Ind2")
Gen_Method = filename
res = cbind(Gen_Method,res)
print(apply(res[,-c(1,2)],2,which.max))
return(res)
}
files = paste0("curveoutlier_",c("0.04_550_0.01","0.25_550_0.01",
# "0.04_550_0.03","0.25_550_0.03",
"0.04_550_0.05","0.25_550_0.05"))
AllRes = data.frame()
for(k in 1:4)
{
filename = files[k]
OneRes = SumTable(filename,n=550)
AllRes = rbind(AllRes,OneRes)
}
View(AllRes)
setwd("~/Documents/Research/pairedfda/pairedfda_code/papercode_organized/Simulation_ABS/simu_output")
files=c("t_0.04_550","t_0.25_550",
"s_0.04_550","s_0.25_550",
"n_0.04_550","n_0.25_550")
SumTable <- function(filename)
{
nsamp = 3
method = substring(filename, 1, 1)
if(method != "n")
{
A = read.table(paste0(filename,".txt"),skip=555,nrow=nsamp)
B = read.table(paste0(filename,".txt"),skip=1111,nrow=nsamp)
C = read.table(paste0(filename,".txt"),skip=1667,nrow=nsamp)
res = rbind(A,B,C)
print(apply(A[,-1],2,which.max))
print(apply(B[,-1],2,which.max))
print(apply(C[,-1],2,which.max))
}else{
res = read.table(paste0(filename,".txt"),skip=555,nrow=nsamp)
print(apply(res[,-1],2,which.max))
}
colnames(res) = c("Fit_Method","Mean1","Mean2",
"YPC1","YPC2","ZPC1","ZPC2","Ind1","Ind2")
Gen_Method = filename
res = cbind(Gen_Method,res)
return(res)
}
AllRes = data.frame()
for(k in 1:6)
{
print(k)
filename = files[k]
OneRes = SumTable(filename)
AllRes = rbind(AllRes,OneRes)
}
View(AllRes)
AllRes[,1] = paste("&&&",AllRes[,1])
xtable(AllRes)
library(AllRes)
library(xtable)
xtable(AllRes)
library(readxl)
SimulationResult <- read_excel("~/Documents/Research/pairedfda/pairedfda_code/papercode_organized/summary data/SimulationResult.xlsx")
View(SimulationResult)
library(readxl)
Res <- read_excel("~/Documents/Research/pairedfda/pairedfda_code/papercode_organized/summary data/SimulationResult.xlsx")
View(Res)
xtable(Res)
View(Res)
res=as.matrix(Res)
View(res)
xtable(res)
library(stargazer)
stargazer()
stargazer(Res)
RES
Res
stargazer(Res)
stargazer(res)
